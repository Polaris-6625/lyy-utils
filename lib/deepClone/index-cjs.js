"use strict";const t={Array:Array.isArray,Date:t=>t instanceof Date,Set:t=>"[object Set]"===Object.prototype.toString.call(t),Map:t=>"[object Map]"===Object.prototype.toString.call(t),Object:t=>"[object Object]"===Object.prototype.toString.call(t),Symbol:t=>"[object Symbol]"===Object.prototype.toString.call(t),Function:t=>"[object Function]"===Object.prototype.toString.call(t)};exports.deepClone=function e(o,n=new WeakMap){if(t.Function(o))return/^function/.test(o.toString())||/^\(\)/.test(o.toString())?new Function("return "+o.toString())():new Function("return function "+o.toString())();if(t.Date(o))return new Date(o.valueOf());if(t.Symbol(o))return Symbol(o.description);if(t.Set(o)){const t=new Set;for(const r of o)t.add(e(r),n);return t}if(t.Map(o)){const t=new Map;for(const r of o)t.set(e(r[0],n),e(r[1],n));return t}if(n.has(o))return n.get(o);if(t.Array(o)){const t=[];for(const r in o)t[r]=e(o[r],n);return t}if(!t.Object(o))return o;const r=t.Array(o)?[]:{};n.set(o,r);for(const c in o)t.Array(o[c])&&e(o[c],n),n.set(o,r),r[c]=e(o[c],n);const c=Object.getOwnPropertySymbols(o);for(const t of c)r[t]=e(o[t],n);return r};
